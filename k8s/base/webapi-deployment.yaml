apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: authentication
  name: oidc-dashboard-webapi-v1
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: 'oidc-dashboard-webapi'
      app.kubernetes.io/version: 'v1'
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 'oidc-dashboard-webapi'
        app.kubernetes.io/version: 'v1'
        app.kubernetes.io/component: 'webapi'
        app.kubernetes.io/part-of: 'oidc-dashboard'
        app.brandmuscle.com/external-facing: 'false'
        app.brandmuscle.com/source-repository: 'GitInternship.brandmuscle-oidc-dashboard-api'
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: #{serviceAccount}#
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: environment-details
              key: ASPNETCORE_ENVIRONMENT
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license
              key: key
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: 'true'
        image: s7registry.azurecr.io/oidc-dashboard-webapi-v1:latest
        imagePullPolicy: IfNotPresent
        name: webapi
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: '/health'
            port: 80
            scheme: 'HTTP'
          initialDelaySeconds: 60
          timeoutSeconds: 3
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "150M"
            cpu: "50m"
          limits:
            memory: "500M"
            cpu: "400m"
      imagePullSecrets:
      - name: s7registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
